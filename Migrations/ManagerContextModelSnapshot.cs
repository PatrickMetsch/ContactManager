// <auto-generated />
using System;
using ContactManager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContactManager.Migrations
{
    [DbContext(typeof(ManagerContext))]
    partial class ManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("ContactManager.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "F",
                            CategoryName = "Friend"
                        },
                        new
                        {
                            CategoryId = "P",
                            CategoryName = "Professional"
                        },
                        new
                        {
                            CategoryId = "M",
                            CategoryName = "Family"
                        });
                });

            modelBuilder.Entity("ContactManager.Models.Manager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Organization")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ManagerId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            ManagerId = 4,
                            CategoryId = "M",
                            Created = new DateTime(2020, 9, 18, 0, 43, 54, 854, DateTimeKind.Local).AddTicks(7480),
                            Email = "karen.butterhaven@helloworld.com",
                            FirstName = "Karen",
                            LastName = "Butterhaven",
                            Organization = "Galapagos International",
                            Phone = "481-516-2342"
                        },
                        new
                        {
                            ManagerId = 5,
                            CategoryId = "F",
                            Created = new DateTime(2008, 6, 1, 7, 47, 0, 0, DateTimeKind.Unspecified),
                            Email = "karen.butterhaven@helloworld.com",
                            FirstName = "Bruce",
                            LastName = "Sourhouse",
                            Phone = "440-488-2001"
                        },
                        new
                        {
                            ManagerId = 6,
                            CategoryId = "P",
                            Created = new DateTime(2020, 9, 18, 0, 43, 54, 864, DateTimeKind.Local).AddTicks(920),
                            Email = "karen.butterhaven@helloworld.com",
                            FirstName = "Louis",
                            LastName = "Vanderbloke",
                            Phone = "216-731-1138"
                        });
                });

            modelBuilder.Entity("ContactManager.Models.Manager", b =>
                {
                    b.HasOne("ContactManager.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
